/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetfime;


//import com.sun.glass.events.KeyEvent;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 *  @author Kluce
 */
public class Connexion extends javax.swing.JFrame {
Connection conn=null;
ResultSet rs;
String sqlQuery;
PreparedStatement ps;
java.sql.Statement st;
String username1, password1, hak;
//String url;
//String compte;
//String motpasse;
    /**
     * Creates new form Connexion
     */

    

    public Connexion() {
        initComponents();
    try {
        UIManager.setLookAndFeel("com.jtattoo.plaf.mcwin.McWinLookAndFeel");
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Connexion.class.getName()).log(Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        Logger.getLogger(Connexion.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        Logger.getLogger(Connexion.class.getName()).log(Level.SEVERE, null, ex);
    } catch (UnsupportedLookAndFeelException ex) {
        Logger.getLogger(Connexion.class.getName()).log(Level.SEVERE, null, ex);
    }
        
        //modifier le titre du formulaire
        this.setTitle("Formulaire de Connexion");
        //centrer le formulaire
        this.setLocationRelativeTo(null);
        //ne pas permettre le redimensionnement du formulaire
        this.setResizable(false);
        
        this.setIconImage(new ImageIcon(getClass().getResource("pentecote.png")).getImage());
        conn = ConexionBD.Conexion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cpte = new javax.swing.JTextField();
        connexion = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        mpasse = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Authentification", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 18), java.awt.Color.red)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Compte");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Mot de passe");

        cpte.setBackground(new java.awt.Color(204, 255, 204));
        cpte.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cpte.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        cpte.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                cpteMouseMoved(evt);
            }
        });
        cpte.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cpteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cpteFocusLost(evt);
            }
        });

        connexion.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        connexion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Ok-icon.png"))); // NOI18N
        connexion.setText("Connexion");
        connexion.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        connexion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                connexionMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                connexionMouseEntered(evt);
            }
        });
        connexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connexionActionPerformed(evt);
            }
        });
        connexion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                connexionKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                connexionKeyTyped(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icone affichage1.jpg"))); // NOI18N

        mpasse.setBackground(new java.awt.Color(204, 255, 204));
        mpasse.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        mpasse.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        mpasse.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mpasseKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cpte, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mpasse)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(connexion, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cpte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(mpasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(connexion)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connexionActionPerformed

            String sqlQ = "select * from utilisateur where compte =? and motpasse = ?";
            
            try {
                 ps = conn.prepareStatement(sqlQ);
                 ps.setString(1, cpte.getText());
                 ps.setString(2, mpasse.getText());
                 rs = ps.executeQuery();
                while (rs.next()) {
                    username1 = rs.getString("compte");
                    password1 = rs.getString("motpasse");
                          hak = rs.getString("qualite");
                          connexion.requestFocus();
                }
            } catch (SQLException e) {
                Logger.getLogger(Connexion.class.getName()).log(Level.SEVERE, null, e);
            }
            
            if (username1 == null || password1 == null) {
                   JOptionPane.showMessageDialog(this, "Veuillez saisir votre compte ou votre mot de passe correct");
             }
            else {
            if (hak.equals("Responsable")) {
                    Administration admin = new Administration();
                    admin.setVisible(true);
                    this.dispose();
            }
            else {
                    Accueil acc = new Accueil();
                    acc.setVisible(true);
                    this.dispose();
            }

            }
            
    }//GEN-LAST:event_connexionActionPerformed

    private void connexionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_connexionKeyReleased
      
        String sqlQ = "select * from utilisateur where compte =? and motpasse = ?";        
            try {
                 ps = conn.prepareStatement(sqlQ);
                 ps.setString(1, cpte.getText());
                 ps.setString(2, mpasse.getText());
                 rs = ps.executeQuery();
                while (rs.next()) {
                    username1 = rs.getString("compte");
                    password1 = rs.getString("motpasse");
                          hak = rs.getString("qualite");
                }
            } catch (SQLException e) {
                Logger.getLogger(Connexion.class.getName()).log(Level.SEVERE, null, e);
            }
            
            if (username1 == null || password1 == null) {
                   JOptionPane.showMessageDialog(this, "Veuillez saisir votre compte ou votre mot de passe correct");
             }
            else {
            if (hak.equals("Responsable")) {
                    Administration admin = new Administration();
                    admin.setVisible(true);
                    this.dispose();
            }
            else {
                    Accueil acc = new Accueil();
                    acc.setVisible(true);
                    this.dispose();
            }

            }

            
    }//GEN-LAST:event_connexionKeyReleased

    private void connexionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_connexionKeyTyped

        String sqlQ = "select * from utilisateur where compte =? and motpasse = ?";
            
            try {
                 ps = conn.prepareStatement(sqlQ);
                 ps.setString(1, cpte.getText());
                 ps.setString(2, mpasse.getText());
                 rs = ps.executeQuery();
                while (rs.next()) {
                    username1 = rs.getString("compte");
                    password1 = rs.getString("motpasse");
                          hak = rs.getString("qualite");
                }
            } catch (SQLException e) {
                Logger.getLogger(Connexion.class.getName()).log(Level.SEVERE, null, e);
            }
            
            if (username1 == null || password1 == null) {
                   JOptionPane.showMessageDialog(this, "Veuillez saisir votre compte ou votre mot de passe correct");
             }
            else {
            if (hak.equals("Responsable")) {
                    Administration admin = new Administration();
                    admin.setVisible(true);
                    this.dispose();
            }
            else {
                    Accueil acc = new Accueil();
                    acc.setVisible(true);
                    this.dispose();
            }

            }
        
    }//GEN-LAST:event_connexionKeyTyped

    private void connexionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_connexionMouseClicked
        
        
    }//GEN-LAST:event_connexionMouseClicked

    private void connexionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_connexionMouseEntered
        
        
    }//GEN-LAST:event_connexionMouseEntered

    private void cpteMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cpteMouseMoved
//        // TODO add your handling code here:
//        description.setText("Veuillez entrer votre compte!");
    }//GEN-LAST:event_cpteMouseMoved

    private void cpteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cpteFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_cpteFocusGained

    private void cpteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cpteFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_cpteFocusLost

    private void mpasseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mpasseKeyPressed
        // TODO add your handling code here:
       if(evt.getKeyCode() == KeyEvent.VK_ENTER){
     String sqlQ = "select * from utilisateur where compte =? and motpasse = ?";
            
            try {
                 ps = conn.prepareStatement(sqlQ);
                 ps.setString(1, cpte.getText());
                 ps.setString(2, mpasse.getText());
                 rs = ps.executeQuery();
                while (rs.next()) {
                    username1 = rs.getString("compte");
                    password1 = rs.getString("motpasse");
                          hak = rs.getString("qualite");
                          connexion.requestFocus();
                }
            } catch (SQLException e) {
                Logger.getLogger(Connexion.class.getName()).log(Level.SEVERE, null, e);
            }
            
            if (username1 == null || password1 == null) {
                   JOptionPane.showMessageDialog(this, "Veuillez saisir votre compte ou votre mot de passe correct");
             }
            else {
            if (hak.equals("Responsable")) {
                    Administration admin = new Administration();
                    admin.setVisible(true);
                    this.dispose();
            }
            else {
                    Accueil acc = new Accueil();
                    acc.setVisible(true);
                    this.dispose();
            }

            }       
        }
    }//GEN-LAST:event_mpasseKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Connexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Connexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Connexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Connexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
       

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try{
                    Thread.sleep(1000);
                
            }catch(Exception e){
                
            }
                new Connexion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connexion;
    private javax.swing.JTextField cpte;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField mpasse;
    // End of variables declaration//GEN-END:variables
}
