/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetfime;

import net.proteanit.sql.DbUtils;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author hp
 */
public class Contribution extends javax.swing.JFrame {

    Connection conn;
    PreparedStatement ps;
    Statement st;
    ResultSet rs;
//    private int numMembre;
    static String test;
    public static String tt3;
            

    /**
     * Creates new form Fimeco
     */
    
    public Contribution() {
        
        initComponents();

        //modifier le titre du formulaire
        this.setTitle("Enregistrement des contributions");
        //centrer le formulaire
        this.setLocationRelativeTo(null);
        //ne pas permettre le redimensionnement du formulaire
        this.setResizable(false);
        this.setIconImage(new ImageIcon(getClass().getResource("pentecote.png")).getImage());
        conn = ConexionBD.Conexion();
        
        // Charger le combobox matricule
        
        String sqlm = "select matricule from membre";
        try{       
             ps =(PreparedStatement) conn.prepareStatement(sqlm);
             rs = ps.executeQuery();
             while(rs.next()){
                 combomat.addItem(rs.getString("matricule"));
             }  
            
        } catch (SQLException ex){
          JOptionPane.showMessageDialog(this, "Problème de connexion avec la base de données");
        }
    }
    
    
//    void recupNumMembre() throws SQLException {
//        String nfSql = "select numMembre from membre where matricule = ?";
//        ps = conn.prepareStatement(nfSql);
//        ps.setString(1, matfidele.getText());
//        rs = ps.executeQuery();
//        if (rs.next()) {
//             int numMembre = rs.getInt(1);
//        }
//    }
    
//        void recupNumMembre() throws SQLException {
//        String nfSq = "select nomMembre,prenomMembre from membre where numMembre = ?";
//        ps = conn.prepareStatement(nfSql);
//        ps.setString(1, matfidele.getText());
//        ps.setString(2, matfidele.getText());
//        rs = ps.executeQuery();
//        if (rs.next()) {
//             int numMembre = rs.getInt(1);
//        }
//    }
    
    
    
     public void afficherContribution(){
        
        try {
            String reqt = "select numContribution,codeContribution,montantCont,numMembre from contribution";
            ps = conn.prepareStatement(reqt); 
            rs = ps.executeQuery();
            tabenregistrercontrib.setModel(DbUtils.resultSetToTableModel(rs));
          }  catch (SQLException e) {
           JOptionPane.showMessageDialog(null, "erreur BD");
        }
     }
     

    public void clear() {
        codecontrib.setText("");
        montantcontribution.setText("");
        combomat.setSelectedIndex(-1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * //       int numContribution = Integer.parseInt(model.getValueAt(selectIndex, 0));
//        int numContribution = integer(model.getValueAt(selectIndex,0));
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        enregistrer = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        enregistrerdime = new javax.swing.JButton();
        modifier = new javax.swing.JButton();
        afficher = new javax.swing.JButton();
        actualiser = new javax.swing.JButton();
        accueil = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        codecontrib = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        montantcontribution = new javax.swing.JTextField();
        combomat = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabenregistrercontrib = new javax.swing.JTable();
        rechercherparcodedime = new javax.swing.JButton();
        rechtable = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        enregistrer.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        enregistrer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Button-Add-icon.png"))); // NOI18N
        enregistrer.setText("Enregistrer");
        enregistrer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        enregistrer.setPreferredSize(new java.awt.Dimension(99, 31));
        enregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enregistrerActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel13.setText("Enregistrement de fimeco");

        enregistrerdime.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        enregistrerdime.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/file (2).png"))); // NOI18N
        enregistrerdime.setText("Rapports");
        enregistrerdime.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        enregistrerdime.setMaximumSize(new java.awt.Dimension(99, 31));
        enregistrerdime.setMinimumSize(new java.awt.Dimension(99, 31));
        enregistrerdime.setPreferredSize(new java.awt.Dimension(99, 31));
        enregistrerdime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enregistrerdimeActionPerformed(evt);
            }
        });

        modifier.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        modifier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/update icon.png"))); // NOI18N
        modifier.setText("Modifier");
        modifier.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierActionPerformed(evt);
            }
        });

        afficher.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        afficher.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icone affichage1.jpg"))); // NOI18N
        afficher.setText("Afficher");
        afficher.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        afficher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afficherActionPerformed(evt);
            }
        });

        actualiser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/actualiser.jpg"))); // NOI18N
        actualiser.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        actualiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualiserActionPerformed(evt);
            }
        });

        accueil.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        accueil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/accueil1.png"))); // NOI18N
        accueil.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        accueil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accueilActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(51, 0, 255), new java.awt.Color(51, 0, 255)));
        jPanel1.setFont(new java.awt.Font("Garamond", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Montant conventionnel");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel12.setText("Code contribution");

        codecontrib.setBackground(new java.awt.Color(204, 255, 204));
        codecontrib.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        codecontrib.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Matricule");

        montantcontribution.setBackground(new java.awt.Color(204, 255, 204));
        montantcontribution.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        montantcontribution.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        combomat.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        combomat.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addComponent(codecontrib, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(montantcontribution, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(combomat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(codecontrib, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(montantcontribution, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(combomat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        tabenregistrercontrib.setBackground(new java.awt.Color(200, 240, 196));
        tabenregistrercontrib.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code fimeco", "Montant conv", "Membre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabenregistrercontrib.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabenregistrercontribMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabenregistrercontrib);

        rechercherparcodedime.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        rechercherparcodedime.setText("Rechercher par code fimeco");
        rechercherparcodedime.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        rechercherparcodedime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercherparcodedimeActionPerformed(evt);
            }
        });

        rechtable.setBackground(new java.awt.Color(204, 255, 204));
        rechtable.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rechtable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        rechtable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rechtableKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(actualiser, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(accueil, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(263, 263, 263)
                .addComponent(jLabel13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(504, 504, 504)
                        .addComponent(rechercherparcodedime, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(rechtable, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(enregistrer, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(afficher, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(enregistrerdime, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1))))
                .addGap(1, 1, 1))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(actualiser, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(accueil, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel13)))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rechercherparcodedime, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rechtable, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(enregistrer, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enregistrerdime, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(afficher, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enregistrerdimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enregistrerdimeActionPerformed
        RapportContributionMembre rapp = new RapportContributionMembre();
        rapp.setVisible(true);
//                       this.dispose(); combosexe.setSelectedItem(rs.getString("sexe"));
    }//GEN-LAST:event_enregistrerdimeActionPerformed

    private void enregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enregistrerActionPerformed
       int numero = 0;
       String reket = "select numMembre from membre where matricule='"+combomat.getSelectedItem()+"'";
        try {                  
            ps = conn.prepareStatement(reket);
            rs = ps.executeQuery();
            if(rs.next()){
                numero = rs.getInt("numMembre");
            }
            String requet = "insert into contribution(codeContribution,montantCont,numMembre) values(?,?,?)";
            ps = conn.prepareStatement(requet);
            ps.setString(1, codecontrib.getText());
            ps.setDouble(2, Double.parseDouble(montantcontribution.getText()));  
            ps.setInt(3, numero);
            ps.executeUpdate();
//            JOptionPane.showMessageDialog(this,"Insertion réussie!!!");
            codecontrib.setText("");
            montantcontribution.setText("");
            combomat.setSelectedIndex(-1);
            afficherContribution();
            
        } catch (SQLException ex) {
            Logger.getLogger(Contribution.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_enregistrerActionPerformed

    private void modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierActionPerformed
        int i = tabenregistrercontrib.getSelectedRow();
       TableModel model = tabenregistrercontrib.getModel();
       int selectIndex = tabenregistrercontrib.getSelectedRow();
       int nume = 0;   
       int numContribution = (Integer)tabenregistrercontrib.getValueAt(selectIndex, 0);    
       String codeContribution = codecontrib.getText();
       Double montantCont = Double.parseDouble(montantcontribution.getText());
       String rek = "select numMembre from membre where matricule ="+model.getValueAt(i,3);
//        String rek = "select numMembre from membre where matricule ="+matricule.getText();
       System.out.println("Le numéro du membre est "+rek);
       try {                                                                      
            ps = conn.prepareStatement(rek); 
            rs = ps.executeQuery();
            System.out.println("Le numéro du membre est "+nume);
            if(rs.next()){
             nume = rs.getInt("numMembre");
            }    
//            String requet = "update contribution set codeContribution=?,montantCont=?,"
//                    + "numMembre=? where numContribution= ?";   

            String requet = "update contribution set codeContribution=?,montantCont=?,"
                    + "numMembre=? where numContribution= ?";  
            
            
            
            
            
            ps = conn.prepareStatement(requet);
            ps.setString(1, codeContribution); 
            ps.setDouble(2, montantCont);
            ps.setInt(3, nume);
            ps.setInt(4, numContribution);
            ps.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(Contribution.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }//GEN-LAST:event_modifierActionPerformed

    private void afficherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afficherActionPerformed
        // TODO add your handling code here: int numContribution = Integer.parseInt(model.getValueAt(selectIndex, 0).toString()); 
        afficherContribution();    
    }//GEN-LAST:event_afficherActionPerformed

    private void actualiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualiserActionPerformed
        // TODO add your handling code here:
        Contribution edm = new Contribution();
        edm.setVisible(true);
        dispose();
    }//GEN-LAST:event_actualiserActionPerformed

    private void accueilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accueilActionPerformed
        // TODO add your handling code here://            matfidele.setText(model.getValueAt(i,3).toString());
        Accueil acc = new Accueil();
        acc.setVisible(true);
        dispose();
    }//GEN-LAST:event_accueilActionPerformed

    private void tabenregistrercontribMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabenregistrercontribMouseClicked
        int i = tabenregistrercontrib.getSelectedRow();
        String matfide = null;
        TableModel model = tabenregistrercontrib.getModel();
        String ssq = "select matricule from membre where numMembre ="+model.getValueAt(i,3);
        try {        
            ps = conn.prepareStatement(ssq);
            rs = ps.executeQuery();
            if(rs.next()){
             matfide = rs.getString("matricule");
            }       
            codecontrib.setText(model.getValueAt(i,1).toString());
            montantcontribution.setText(model.getValueAt(i,2).toString());    
            combomat.setSelectedItem(matfide);
//                    setText(matfide);
        } catch (SQLException ex) {
            Logger.getLogger(Contribution.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }//GEN-LAST:event_tabenregistrercontribMouseClicked

    private void rechercherparcodedimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercherparcodedimeActionPerformed
        // TODO add your handling code here://        
                DefaultTableModel model = (DefaultTableModel) tabenregistrercontrib.getModel();
                 model.setRowCount(0); // vider le tableau
                try{
                        st= (Statement) conn.createStatement();
                        String req="select * from fimeco where codeFimeco='"+rechtable.getText()+"'";
                        rs=st.executeQuery(req);
            //          while(rs.next()){
                           if (rs.next()) {
                                  Object [] mem={rs.getString(1),rs.getString(2),rs.getString(3)};
                                  model.addRow(mem);
                              }else{
                                JOptionPane.showMessageDialog(null, "Vérifier votre saisie !");
                            }
                          tabenregistrercontrib.setModel(model);
                          rechtable.setText("");
                        }
                    catch(SQLException se){
                            JOptionPane.showMessageDialog(this, se.getMessage());
                        }

    }//GEN-LAST:event_rechercherparcodedimeActionPerformed

    private void rechtableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rechtableKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            DefaultTableModel model = (DefaultTableModel) tabenregistrercontrib.getModel();
                 model.setRowCount(0); // vider le tableau
                try{
                        st= (Statement) conn.createStatement();
                        String req="select * from fimeco where codeFimeco='"+rechtable.getText()+"'";
                        rs=st.executeQuery(req);
            //          while(rs.next()){
                           if (rs.next()) {
                                  Object [] mem={rs.getString(1),rs.getString(2),rs.getString(3)};
                                  model.addRow(mem);
                              }else{
                                JOptionPane.showMessageDialog(null, "Vérifier votre saisie !");
                            }
                          tabenregistrercontrib.setModel(model);
                          rechtable.setText("");
                        }
                    catch(SQLException se){
                            JOptionPane.showMessageDialog(this, se.getMessage());
                        }
           }
    }//GEN-LAST:event_rechtableKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Contribution.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Contribution.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Contribution.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Contribution.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Contribution().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accueil;
    private javax.swing.JButton actualiser;
    private javax.swing.JButton afficher;
    private javax.swing.JTextField codecontrib;
    private javax.swing.JComboBox<String> combomat;
    private javax.swing.JButton enregistrer;
    private javax.swing.JButton enregistrerdime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modifier;
    private javax.swing.JTextField montantcontribution;
    private javax.swing.JButton rechercherparcodedime;
    private javax.swing.JTextField rechtable;
    private javax.swing.JTable tabenregistrercontrib;
    // End of variables declaration//GEN-END:variables

}
